defaults: &defaults
  docker:
    - image: circleci/python:3.6.1
  working_directory: /tmp

version: 2
jobs:
   build:
     <<: *defaults
     steps:
       - checkout

       - restore_cache:
           key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

       - run:
           name: Prepare
           command: |
             export PATH="$HOME/.local/bin:$PATH"
             pip install --user pipenv
             python3 -m venv venv
             . venv/bin/activate
             pipenv install

       - run:
           name: Build Zip
           command: |
             mkdir build
             mkdir dist
             cp methods.py build/
             cp -R venv/lib/python3.6/site-packages/* build/
             cd build; zip -r ../dist/secureletter-0.0.1.zip .

       - save_cache:
           key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
           paths:
             - venv
       - persist_to_workspace:
           root: project

   upload:
     <<: *defaults
     steps:
       - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/project

       - run:
           name: Prepare
           command: |
             sudo apt-get update && sudo apt-get install -y awscli

       - run:
           name: Deploy Resources to S3
           command: |
             aws s3 cp dist/secureletter-0.0.1.zip s3://secureletter-app/
             aws s3 cp cloudformation_stack.yaml s3://secureletter-app/

       - run:
           name: Update Cloudformation Stack
           command: |
             aws cloudformation update-stack \
               --stack-name $STACK_NAME \
               --region $AWS_DEFAULT_REGION \
               --template-url https://s3-$AWS_DEFAULT_REGION.amazonaws.com/$S3_BUCKET/cloudformation_stack.yaml \
               --capabilities CAPABILITY_IAM
             #aws cloudformation wait stack-update-complete --stack-name $STACK_NAME

workflows:
  version: 2
  build_and_upload:
    jobs:
      - build
      - upload:
          requires: build
      - deploy:
          requires: upload
          filters:
            branches:
              only:
                - master

